// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PCStore.Infrastructure.PCStoreDataBaseContext;

#nullable disable

namespace PCStore.API.Migrations
{
    [DbContext(typeof(PcstoreContext))]
    partial class PcstoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PCStore.Domain.PCStoreEntities.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BrandID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("PCStore.Domain.PCStoreEntities.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CommentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<int>("Article")
                        .HasColumnType("int");

                    b.Property<string>("Comment1")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Comment");

                    b.Property<DateTime>("CommentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("CommentId")
                        .HasName("PK__Comments__C3B4DFAA228ED363");

                    b.HasIndex("Article");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("PCStore.Domain.PCStoreEntities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__C3905BAF4D4E9B9E");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PCStore.Domain.PCStoreEntities.PartOrder", b =>
                {
                    b.Property<int>("PorderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("POrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PorderId"));

                    b.Property<int>("Article")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("PorderId")
                        .HasName("PK__PartOrde__8BC48CFACF6672FB");

                    b.HasIndex("Article");

                    b.HasIndex("OrderId");

                    b.ToTable("PartOrders");
                });

            modelBuilder.Entity("PCStore.Domain.PCStoreEntities.Product", b =>
                {
                    b.Property<int>("Article")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Article"));

                    b.Property<bool>("Availability")
                        .HasColumnType("bit");

                    b.Property<int>("BrandId")
                        .HasColumnType("int")
                        .HasColumnName("BrandID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("ProductInfo")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Article")
                        .HasName("PK__Products__4943444B3CACFB32");

                    b.HasIndex("BrandId");

                    b.HasIndex("Type");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("PCStore.Domain.PCStoreEntities.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StatusId")
                        .HasName("PK__Statuses__C8EE2043B71385D9");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("PCStore.Domain.PCStoreEntities.Types", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("PCStore.Domain.PCStoreEntities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Father")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("PCStore.Domain.PCStoreEntities.Comment", b =>
                {
                    b.HasOne("PCStore.Domain.PCStoreEntities.Product", "ArticleNavigation")
                        .WithMany("Comments")
                        .HasForeignKey("Article")
                        .IsRequired()
                        .HasConstraintName("FK_Comments_Products");

                    b.HasOne("PCStore.Domain.PCStoreEntities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArticleNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PCStore.Domain.PCStoreEntities.Order", b =>
                {
                    b.HasOne("PCStore.Domain.PCStoreEntities.Status", "Status")
                        .WithMany("Orders")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Orders_Statuses");

                    b.HasOne("PCStore.Domain.PCStoreEntities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PCStore.Domain.PCStoreEntities.PartOrder", b =>
                {
                    b.HasOne("PCStore.Domain.PCStoreEntities.Product", "ArticleNavigation")
                        .WithMany("PartOrders")
                        .HasForeignKey("Article")
                        .IsRequired()
                        .HasConstraintName("FK_PartOrders_Products");

                    b.HasOne("PCStore.Domain.PCStoreEntities.Order", "Order")
                        .WithMany("PartOrders")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_PartOrders_Orders");

                    b.Navigation("ArticleNavigation");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("PCStore.Domain.PCStoreEntities.Product", b =>
                {
                    b.HasOne("PCStore.Domain.PCStoreEntities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .IsRequired()
                        .HasConstraintName("FK_Products_Brands");

                    b.HasOne("PCStore.Domain.PCStoreEntities.Types", "TypeNavigation")
                        .WithMany("Products")
                        .HasForeignKey("Type")
                        .IsRequired()
                        .HasConstraintName("FK_Products_Types");

                    b.Navigation("Brand");

                    b.Navigation("TypeNavigation");
                });

            modelBuilder.Entity("PCStore.Domain.PCStoreEntities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PCStore.Domain.PCStoreEntities.Order", b =>
                {
                    b.Navigation("PartOrders");
                });

            modelBuilder.Entity("PCStore.Domain.PCStoreEntities.Product", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("PartOrders");
                });

            modelBuilder.Entity("PCStore.Domain.PCStoreEntities.Status", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PCStore.Domain.PCStoreEntities.Types", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PCStore.Domain.PCStoreEntities.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
